{"version":3,"file":"VaStepperControls.vue_vue_type_script_setup_true_lang.mjs","sources":["../../../../../src/components/va-stepper/VaStepperControls.vue"],"sourcesContent":["<template>\n  <div class=\"va-stepper__default-controls\">\n    <va-button\n      preset=\"primary\"\n      :disabled=\"$props.modelValue <= 0\"\n      @click=\"$props.stepControls.prevStep()\"\n    >\n      {{ t('back') }}\n    </va-button>\n    <va-button\n      v-if=\"!isLastStep\"\n      @click=\"$props.stepControls.nextStep()\"\n      :disabled=\"$props.nextDisabled\"\n    >\n      {{ t('next') }}\n    </va-button>\n    <va-button\n      v-else-if=\"!$props.finishButtonHidden\"\n      @click=\"$emit('finish')\"\n    >\n      {{ t('finish') }}\n    </va-button>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { PropType, computed } from 'vue'\nimport { useTranslation } from '../../composables/useTranslation'\nimport { VaButton } from '../va-button'\nimport type { Step, StepControls } from './types'\n\ndefineOptions({\n  name: 'VaStepperControls',\n})\n\nconst props = defineProps({\n  modelValue: { type: Number, required: true },\n  steps: {\n    type: Array as PropType<Step[]>,\n    required: true,\n  },\n  nextDisabled: { type: Boolean, required: true },\n  stepControls: { type: Object as PropType<StepControls>, required: true },\n  finishButtonHidden: { type: Boolean, default: false },\n})\n\nconst { t } = useTranslation()\n\nconst isLastStep = computed(() => {\n  const lastEnabledStepIndex = props.steps.length - 1\n  return props.modelValue >= lastEnabledStepIndex\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-stepper {\n  &__default-controls {\n    display: flex;\n    gap: var(--va-stepper-controls-gap);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkCA,UAAM,QAAQ;AAWR,UAAA,EAAE,MAAM;AAER,UAAA,aAAa,SAAS,MAAM;AAC1B,YAAA,uBAAuB,MAAM,MAAM,SAAS;AAClD,aAAO,MAAM,cAAc;AAAA,IAAA,CAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}