export declare const VaColorPalette: import("vue").DefineComponent<{
    modelValue: {
        type: StringConstructor;
        default: null;
    };
    palette: {
        type: import("vue").PropType<string[]>;
        default: () => never[];
    };
    indicator: {
        type: import("vue").PropType<"square" | "dot">;
        default: string;
        validator: (value: string) => boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        default: string;
    };
    ariaIndicatorLabel: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    stateful: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (...args: any[]) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: StringConstructor;
        default: null;
    };
    palette: {
        type: import("vue").PropType<string[]>;
        default: () => never[];
    };
    indicator: {
        type: import("vue").PropType<"square" | "dot">;
        default: string;
        validator: (value: string) => boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        default: string;
    };
    ariaIndicatorLabel: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    stateful: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    preset: string;
    modelValue: string;
    stateful: boolean;
    ariaLabel: string;
    indicator: "square" | "dot";
    palette: string[];
    ariaIndicatorLabel: string;
}, {}>;
