export declare const VaBacktop: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        target: {
            type: import("vue").PropType<string | Element | undefined>;
            default: undefined;
        };
        visibilityHeight: {
            type: NumberConstructor;
            default: number;
        };
        speed: {
            type: NumberConstructor;
            default: number;
        };
        verticalOffset: {
            type: StringConstructor;
            default: string;
        };
        horizontalOffset: {
            type: StringConstructor;
            default: string;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
        horizontalPosition: {
            type: import("vue").PropType<"left" | "right">;
            default: string;
            validator: (value: string) => boolean;
        };
        verticalPosition: {
            type: import("vue").PropType<"top" | "bottom">;
            default: string;
            validator: (value: string) => boolean;
        };
        ariaLabel: {
            type: StringConstructor;
            default: string;
        };
        preset: {
            type: StringConstructor;
            default: undefined;
        };
    }>>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        target: {
            type: import("vue").PropType<string | Element | undefined>;
            default: undefined;
        };
        visibilityHeight: {
            type: NumberConstructor;
            default: number;
        };
        speed: {
            type: NumberConstructor;
            default: number;
        };
        verticalOffset: {
            type: StringConstructor;
            default: string;
        };
        horizontalOffset: {
            type: StringConstructor;
            default: string;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
        horizontalPosition: {
            type: import("vue").PropType<"left" | "right">;
            default: string;
            validator: (value: string) => boolean;
        };
        verticalPosition: {
            type: import("vue").PropType<"top" | "bottom">;
            default: string;
            validator: (value: string) => boolean;
        };
        ariaLabel: {
            type: StringConstructor;
            default: string;
        };
        preset: {
            type: StringConstructor;
            default: undefined;
        };
    }>>, {
        preset: string;
        target: string | Element | undefined;
        color: string;
        visibilityHeight: number;
        speed: number;
        verticalOffset: string;
        horizontalOffset: string;
        horizontalPosition: "left" | "right";
        verticalPosition: "top" | "bottom";
        ariaLabel: string;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        target: {
            type: import("vue").PropType<string | Element | undefined>;
            default: undefined;
        };
        visibilityHeight: {
            type: NumberConstructor;
            default: number;
        };
        speed: {
            type: NumberConstructor;
            default: number;
        };
        verticalOffset: {
            type: StringConstructor;
            default: string;
        };
        horizontalOffset: {
            type: StringConstructor;
            default: string;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
        horizontalPosition: {
            type: import("vue").PropType<"left" | "right">;
            default: string;
            validator: (value: string) => boolean;
        };
        verticalPosition: {
            type: import("vue").PropType<"top" | "bottom">;
            default: string;
            validator: (value: string) => boolean;
        };
        ariaLabel: {
            type: StringConstructor;
            default: string;
        };
        preset: {
            type: StringConstructor;
            default: undefined;
        };
    }>>, {}, {}, {}, {}, {
        preset: string;
        target: string | Element | undefined;
        color: string;
        visibilityHeight: number;
        speed: number;
        verticalOffset: string;
        horizontalOffset: string;
        horizontalPosition: "left" | "right";
        verticalPosition: "top" | "bottom";
        ariaLabel: string;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    target: {
        type: import("vue").PropType<string | Element | undefined>;
        default: undefined;
    };
    visibilityHeight: {
        type: NumberConstructor;
        default: number;
    };
    speed: {
        type: NumberConstructor;
        default: number;
    };
    verticalOffset: {
        type: StringConstructor;
        default: string;
    };
    horizontalOffset: {
        type: StringConstructor;
        default: string;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    horizontalPosition: {
        type: import("vue").PropType<"left" | "right">;
        default: string;
        validator: (value: string) => boolean;
    };
    verticalPosition: {
        type: import("vue").PropType<"top" | "bottom">;
        default: string;
        validator: (value: string) => boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}>>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    preset: string;
    target: string | Element | undefined;
    color: string;
    visibilityHeight: number;
    speed: number;
    verticalOffset: string;
    horizontalOffset: string;
    horizontalPosition: "left" | "right";
    verticalPosition: "top" | "bottom";
    ariaLabel: string;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
});
