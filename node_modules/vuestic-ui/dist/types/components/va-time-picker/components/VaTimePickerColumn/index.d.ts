export declare const VaTimePickerColumn: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        items: {
            type: import("vue").PropType<string[] | number[]>;
            default: () => never[];
        };
        activeItemIndex: {
            type: NumberConstructor;
            default: number;
        };
        cellHeight: {
            type: NumberConstructor;
            default: number;
        };
    }>> & {
        onFocus?: ((...args: any[]) => any) | undefined;
        onBlur?: ((...args: any[]) => any) | undefined;
        "onItem-selected"?: ((...args: any[]) => any) | undefined;
        "onUpdate:activeItemIndex"?: ((...args: any[]) => any) | undefined;
    }, {
        focus: () => void;
        blur: () => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
        focus: (...args: any[]) => void;
        blur: (...args: any[]) => void;
        "item-selected": (...args: any[]) => void;
        "update:activeItemIndex": (...args: any[]) => void;
    }, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        items: {
            type: import("vue").PropType<string[] | number[]>;
            default: () => never[];
        };
        activeItemIndex: {
            type: NumberConstructor;
            default: number;
        };
        cellHeight: {
            type: NumberConstructor;
            default: number;
        };
    }>> & {
        onFocus?: ((...args: any[]) => any) | undefined;
        onBlur?: ((...args: any[]) => any) | undefined;
        "onItem-selected"?: ((...args: any[]) => any) | undefined;
        "onUpdate:activeItemIndex"?: ((...args: any[]) => any) | undefined;
    }, {
        items: string[] | number[];
        cellHeight: number;
        activeItemIndex: number;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        items: {
            type: import("vue").PropType<string[] | number[]>;
            default: () => never[];
        };
        activeItemIndex: {
            type: NumberConstructor;
            default: number;
        };
        cellHeight: {
            type: NumberConstructor;
            default: number;
        };
    }>> & {
        onFocus?: ((...args: any[]) => any) | undefined;
        onBlur?: ((...args: any[]) => any) | undefined;
        "onItem-selected"?: ((...args: any[]) => any) | undefined;
        "onUpdate:activeItemIndex"?: ((...args: any[]) => any) | undefined;
    }, {
        focus: () => void;
        blur: () => void;
    }, {}, {}, {}, {
        items: string[] | number[];
        cellHeight: number;
        activeItemIndex: number;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    items: {
        type: import("vue").PropType<string[] | number[]>;
        default: () => never[];
    };
    activeItemIndex: {
        type: NumberConstructor;
        default: number;
    };
    cellHeight: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    onFocus?: ((...args: any[]) => any) | undefined;
    onBlur?: ((...args: any[]) => any) | undefined;
    "onItem-selected"?: ((...args: any[]) => any) | undefined;
    "onUpdate:activeItemIndex"?: ((...args: any[]) => any) | undefined;
}, {
    focus: () => void;
    blur: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    focus: (...args: any[]) => void;
    blur: (...args: any[]) => void;
    "item-selected": (...args: any[]) => void;
    "update:activeItemIndex": (...args: any[]) => void;
}, string, {
    items: string[] | number[];
    cellHeight: number;
    activeItemIndex: number;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        cell?(_: {
            item: string | number;
            index: number;
            activeItemIndex: number;
            items: string[] | number[];
            formattedItem: string;
        }): any;
    };
});
