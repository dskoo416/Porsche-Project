import { PropType } from 'vue';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    horizontal: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    rtl: {
        type: BooleanConstructor;
        default: boolean;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    sizesConfig: {
        type: ObjectConstructor;
        default: () => {
            defaultSize: number;
            sizes: {
                small: number;
                medium: number;
                large: number;
            };
        };
    };
    size: {
        type: PropType<"small" | "medium" | "large">;
        default: string;
        validator: (v: string) => boolean;
    };
    fontSizesConfig: {
        type: PropType<Record<string, any>>;
        default: () => import("../../services/global-config").SizeConfig;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    horizontal: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    rtl: {
        type: BooleanConstructor;
        default: boolean;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    sizesConfig: {
        type: ObjectConstructor;
        default: () => {
            defaultSize: number;
            sizes: {
                small: number;
                medium: number;
                large: number;
            };
        };
    };
    size: {
        type: PropType<"small" | "medium" | "large">;
        default: string;
        validator: (v: string) => boolean;
    };
    fontSizesConfig: {
        type: PropType<Record<string, any>>;
        default: () => import("../../services/global-config").SizeConfig;
    };
}>>, {
    color: string;
    gradient: boolean;
    horizontal: boolean;
    vertical: boolean;
    size: "small" | "medium" | "large";
    sizesConfig: Record<string, any>;
    fontSizesConfig: Record<string, any>;
    rtl: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
