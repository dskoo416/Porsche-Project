export declare const VaScrollContainer: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        vertical: {
            type: BooleanConstructor;
            default: boolean;
        };
        horizontal: {
            type: BooleanConstructor;
            default: boolean;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
        rtl: {
            type: BooleanConstructor;
            default: boolean;
        };
        gradient: {
            type: BooleanConstructor;
            default: boolean;
        };
        sizesConfig: {
            type: ObjectConstructor;
            default: () => {
                defaultSize: number;
                sizes: {
                    small: number;
                    medium: number;
                    large: number;
                };
            };
        };
        size: {
            type: import("vue").PropType<"small" | "medium" | "large">;
            default: string;
            validator: (v: string) => boolean;
        };
        fontSizesConfig: {
            type: import("vue").PropType<Record<string, any>>;
            default: () => import("../../services/global-config").SizeConfig;
        };
    }>>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        vertical: {
            type: BooleanConstructor;
            default: boolean;
        };
        horizontal: {
            type: BooleanConstructor;
            default: boolean;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
        rtl: {
            type: BooleanConstructor;
            default: boolean;
        };
        gradient: {
            type: BooleanConstructor;
            default: boolean;
        };
        sizesConfig: {
            type: ObjectConstructor;
            default: () => {
                defaultSize: number;
                sizes: {
                    small: number;
                    medium: number;
                    large: number;
                };
            };
        };
        size: {
            type: import("vue").PropType<"small" | "medium" | "large">;
            default: string;
            validator: (v: string) => boolean;
        };
        fontSizesConfig: {
            type: import("vue").PropType<Record<string, any>>;
            default: () => import("../../services/global-config").SizeConfig;
        };
    }>>, {
        color: string;
        gradient: boolean;
        horizontal: boolean;
        vertical: boolean;
        size: "small" | "medium" | "large";
        sizesConfig: Record<string, any>;
        fontSizesConfig: Record<string, any>;
        rtl: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        vertical: {
            type: BooleanConstructor;
            default: boolean;
        };
        horizontal: {
            type: BooleanConstructor;
            default: boolean;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
        rtl: {
            type: BooleanConstructor;
            default: boolean;
        };
        gradient: {
            type: BooleanConstructor;
            default: boolean;
        };
        sizesConfig: {
            type: ObjectConstructor;
            default: () => {
                defaultSize: number;
                sizes: {
                    small: number;
                    medium: number;
                    large: number;
                };
            };
        };
        size: {
            type: import("vue").PropType<"small" | "medium" | "large">;
            default: string;
            validator: (v: string) => boolean;
        };
        fontSizesConfig: {
            type: import("vue").PropType<Record<string, any>>;
            default: () => import("../../services/global-config").SizeConfig;
        };
    }>>, {}, {}, {}, {}, {
        color: string;
        gradient: boolean;
        horizontal: boolean;
        vertical: boolean;
        size: "small" | "medium" | "large";
        sizesConfig: Record<string, any>;
        fontSizesConfig: Record<string, any>;
        rtl: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    vertical: {
        type: BooleanConstructor;
        default: boolean;
    };
    horizontal: {
        type: BooleanConstructor;
        default: boolean;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    rtl: {
        type: BooleanConstructor;
        default: boolean;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    sizesConfig: {
        type: ObjectConstructor;
        default: () => {
            defaultSize: number;
            sizes: {
                small: number;
                medium: number;
                large: number;
            };
        };
    };
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        default: string;
        validator: (v: string) => boolean;
    };
    fontSizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        default: () => import("../../services/global-config").SizeConfig;
    };
}>>, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    color: string;
    gradient: boolean;
    horizontal: boolean;
    vertical: boolean;
    size: "small" | "medium" | "large";
    sizesConfig: Record<string, any>;
    fontSizesConfig: Record<string, any>;
    rtl: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {}): any;
    };
});
