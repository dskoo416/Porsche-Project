declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    hoverColor: {
        type: StringConstructor;
        default: undefined;
    };
    hoverOpacity: {
        type: NumberConstructor;
        default: number;
        validator: (v: number) => boolean;
    };
    borderColor: {
        type: StringConstructor;
        default: undefined;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    minimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    hoverable: {
        type: BooleanConstructor;
        default: boolean;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    minimizedWidth: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    animated: {
        type: (StringConstructor | BooleanConstructor)[];
        default: boolean;
    };
    closeOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}, {
    isMinimized: import("vue").ComputedRef<boolean>;
    isHovered: import("vue").Ref<boolean>;
    updateHoverState: (newHoverState: boolean) => void;
    rootElement: import("vue").ShallowRef<HTMLElement | undefined>;
    menu: import("vue").Ref<HTMLElement | undefined>;
    doShowMenu: import("vue").ComputedRef<boolean>;
    menuWidth: import("vue").ComputedRef<string>;
    sidebarWidth: import("vue").Ref<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (...args: any[]) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    activeColor: {
        type: StringConstructor;
        default: string;
    };
    hoverColor: {
        type: StringConstructor;
        default: undefined;
    };
    hoverOpacity: {
        type: NumberConstructor;
        default: number;
        validator: (v: number) => boolean;
    };
    borderColor: {
        type: StringConstructor;
        default: undefined;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    gradient: {
        type: BooleanConstructor;
        default: boolean;
    };
    minimized: {
        type: BooleanConstructor;
        default: boolean;
    };
    hoverable: {
        type: BooleanConstructor;
        default: boolean;
    };
    width: {
        type: StringConstructor;
        default: string;
    };
    minimizedWidth: {
        type: StringConstructor;
        default: string;
    };
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    animated: {
        type: (StringConstructor | BooleanConstructor)[];
        default: boolean;
    };
    closeOnClickOutside: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    preset: string;
    modelValue: boolean;
    color: string;
    borderColor: string;
    gradient: boolean;
    activeColor: string;
    hoverOpacity: number;
    closeOnClickOutside: boolean;
    width: string;
    hoverable: boolean;
    animated: string | boolean;
    hoverColor: string;
    minimized: boolean;
    minimizedWidth: string;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
