"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var e=require("./colors.807ff8d2.js");function _interopNamespace(e){if(e&&e.__esModule)return e;var t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});return e&&Object.keys(e).forEach((function(n){if("default"!==n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}require("fs"),require("path");const t=require("fs"),n={content:[],theme:{extend:{}},plugins:[]};exports.integrateVuesticConfig=async()=>{var o,i,r;e.tailwindConfigPath||console.log("Tailwind CSS config file not found. Proceeding with default config.");const l=e.tailwindConfigPath?(await e.__vitePreload((()=>{return t=e.tailwindConfigPath,Promise.resolve().then((function(){return _interopNamespace(require(t))}));var t}),void 0)).default:n;l.theme||(l.theme={}),(o=l.theme).extend||(o.extend={}),(i=l.theme.extend).colors||(i.colors={}),(r=l.theme.extend).screens||(r.screens={}),l.theme.extend.colors=e.convertVuesticColors(l),l.theme.extend.screens=e.convertVuesticThresholds(l),(o=>{try{const i=`module.exports = ${null!=o?o:e.convertValueToString(n)}`;t.writeFileSync(e.tailwindConfigFilename||e.defaultTailwindConfigFilename,i),console.log(`${e.tailwindConfigFilename||e.defaultTailwindConfigFilename} was successfully synchronized with Vuestic UI config!`)}catch(i){console.log(i)}})(e.convertValueToString(l))};
//# sourceMappingURL=sync-vuestic.cjs.map
