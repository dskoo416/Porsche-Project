"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var e=require("./colors.807ff8d2.js");function _interopNamespace(e){if(e&&e.__esModule)return e;var t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});return e&&Object.keys(e).forEach((function(i){if("default"!==i){var o=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,o.get?o:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}require("fs"),require("path");const t=require("fs");exports.integrateTailwindConfig=async()=>{e.tailwindConfigPath||console.log("Tailwind CSS config file not found. Proceeding with default Tailwind CSS settings.");const i=e.tailwindConfigPath?await e.__vitePreload((()=>{return t=e.tailwindConfigPath,Promise.resolve().then((function(){return _interopNamespace(require(t))}));var t}),void 0):void 0,o=e.tailwindColorsSync(i),n={breakpoints:{thresholds:e.tailwindThresholdsSync(i)},colors:{variables:o}};(e=>{try{const i=`// Do not insert custom values to the colors or breakpoints Vuestic UI config\n// or they will be overwritten! Use Tailwind CSS config instead.\n\nexport default ${null!=e?e:"{}"}`;t.writeFileSync("vuestic.config.js",i),console.log("vuestic.config.js was successfully synchronized with Tailwind CSS config!")}catch(i){console.log(i)}})(e.convertValueToString(n)),e.tailwindConfigPath&&delete require.cache[require.resolve(e.tailwindConfigPath)]};
//# sourceMappingURL=sync-tailwind.cjs.map
